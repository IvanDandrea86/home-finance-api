# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Permission {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  user: User
  userId: String!
  type: Role!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum Role {
  ADMIN
  USER
}

type User {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  firstName: String!
  lastName: String!
  email: String!
  password: String
  validationToken: String!
  lastLogin: DateTime
  verificationStatus: VerificationStatus!
  permission: Permission
}

enum VerificationStatus {
  NOT_VERIFIED
  VERIFIED
  PENDING
}

type Family {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type AuthResponse {
  message: String
  role: String
  user: User
}

type Query {
  familys(where: FamilyWhereInput, orderBy: [FamilyOrderByWithRelationInput!], cursor: FamilyWhereUniqueInput, take: Int, skip: Int, distinct: [FamilyScalarFieldEnum!]): [Family!]!
  family(where: FamilyWhereUniqueInput!): Family
  permissions(where: PermissionWhereInput, orderBy: [PermissionOrderByWithRelationInput!], cursor: PermissionWhereUniqueInput, take: Int, skip: Int, distinct: [PermissionScalarFieldEnum!]): [Permission!]!
  permission(where: PermissionWhereUniqueInput!): Permission
  users(where: UserWhereInput, orderBy: [UserOrderByWithRelationInput!], cursor: UserWhereUniqueInput, take: Int, skip: Int, distinct: [UserScalarFieldEnum!]): [User!]!
  user(where: UserWhereUniqueInput!): User
  whoAmI: User
}

input FamilyWhereInput {
  AND: [FamilyWhereInput!]
  OR: [FamilyWhereInput!]
  NOT: [FamilyWhereInput!]
  id: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringFilter
}

enum QueryMode {
  default
  insensitive
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input DateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

input FamilyOrderByWithRelationInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

enum SortOrder {
  asc
  desc
}

input FamilyWhereUniqueInput {
  id: String
}

enum FamilyScalarFieldEnum {
  id
  createdAt
  updatedAt
}

input PermissionWhereInput {
  AND: [PermissionWhereInput!]
  OR: [PermissionWhereInput!]
  NOT: [PermissionWhereInput!]
  id: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  user: UserRelationFilter
  userId: StringFilter
  type: EnumRoleFilter
}

input UserRelationFilter {
  is: UserWhereInput
  isNot: UserWhereInput
}

input UserWhereInput {
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
  id: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  firstName: StringFilter
  lastName: StringFilter
  email: StringFilter
  password: StringNullableFilter
  validationToken: StringFilter
  lastLogin: DateTimeNullableFilter
  verificationStatus: EnumVerificationStatusFilter
  permission: PermissionRelationFilter
}

input StringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringNullableFilter
}

input NestedStringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringNullableFilter
}

input DateTimeNullableFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeNullableFilter
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeNullableFilter
}

input EnumVerificationStatusFilter {
  equals: VerificationStatus
  in: [VerificationStatus!]
  notIn: [VerificationStatus!]
  not: NestedEnumVerificationStatusFilter
}

input NestedEnumVerificationStatusFilter {
  equals: VerificationStatus
  in: [VerificationStatus!]
  notIn: [VerificationStatus!]
  not: NestedEnumVerificationStatusFilter
}

input PermissionRelationFilter {
  is: PermissionWhereInput
  isNot: PermissionWhereInput
}

input EnumRoleFilter {
  equals: Role
  in: [Role!]
  notIn: [Role!]
  not: NestedEnumRoleFilter
}

input NestedEnumRoleFilter {
  equals: Role
  in: [Role!]
  notIn: [Role!]
  not: NestedEnumRoleFilter
}

input PermissionOrderByWithRelationInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  user: UserOrderByWithRelationInput
  userId: SortOrder
  type: SortOrder
}

input UserOrderByWithRelationInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  firstName: SortOrder
  lastName: SortOrder
  email: SortOrder
  password: SortOrder
  validationToken: SortOrder
  lastLogin: SortOrder
  verificationStatus: SortOrder
  permission: PermissionOrderByWithRelationInput
}

input PermissionWhereUniqueInput {
  id: String
  userId: String
}

enum PermissionScalarFieldEnum {
  id
  createdAt
  updatedAt
  userId
  type
}

input UserWhereUniqueInput {
  id: String
  email: String
}

enum UserScalarFieldEnum {
  id
  createdAt
  updatedAt
  firstName
  lastName
  email
  password
  validationToken
  lastLogin
  verificationStatus
}

type Mutation {
  createFamily(createFamilyInput: FamilyCreateInput!): Family!
  updateFamily(where: FamilyWhereUniqueInput!, updateFamilyInput: FamilyUpdateInput!): Family!
  removeFamily(where: FamilyWhereUniqueInput!): Family!
  createPermission(createPermissionInput: PermissionCreateInput!): Permission!
  updatePermission(where: PermissionWhereUniqueInput!, updatePermissionInput: PermissionUpdateInput!): Permission!
  removePermission(where: PermissionWhereUniqueInput!): Permission!
  createUser(createUserInput: UserCreateInput!): User!
  updateUser(where: UserWhereUniqueInput!, updateUserInput: UserUpdateInput!): User!
  removeUser(where: UserWhereUniqueInput!): User!
  login(authInput: AuthInput!): AuthResponse!
  logout: AuthResponse
}

input FamilyCreateInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
}

input FamilyUpdateInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input StringFieldUpdateOperationsInput {
  set: String
}

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input PermissionCreateInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  user: UserCreateNestedOneWithoutPermissionInput
  type: Role!
}

input UserCreateNestedOneWithoutPermissionInput {
  create: UserCreateWithoutPermissionInput
  connectOrCreate: UserCreateOrConnectWithoutPermissionInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutPermissionInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  firstName: String!
  lastName: String!
  email: String!
  password: String
  validationToken: String!
  lastLogin: DateTime
  verificationStatus: VerificationStatus
}

input UserCreateOrConnectWithoutPermissionInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutPermissionInput!
}

input PermissionUpdateInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneWithoutPermissionInput
  type: EnumRoleFieldUpdateOperationsInput
}

input UserUpdateOneWithoutPermissionInput {
  create: UserCreateWithoutPermissionInput
  connectOrCreate: UserCreateOrConnectWithoutPermissionInput
  upsert: UserUpsertWithoutPermissionInput
  disconnect: Boolean
  delete: Boolean
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutPermissionInput
}

input UserUpsertWithoutPermissionInput {
  update: UserUpdateWithoutPermissionInput!
  create: UserCreateWithoutPermissionInput!
}

input UserUpdateWithoutPermissionInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  lastName: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  validationToken: StringFieldUpdateOperationsInput
  lastLogin: NullableDateTimeFieldUpdateOperationsInput
  verificationStatus: EnumVerificationStatusFieldUpdateOperationsInput
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input EnumVerificationStatusFieldUpdateOperationsInput {
  set: VerificationStatus
}

input EnumRoleFieldUpdateOperationsInput {
  set: Role
}

input UserCreateInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  firstName: String!
  lastName: String!
  email: String!
  password: String
  validationToken: String!
  lastLogin: DateTime
  verificationStatus: VerificationStatus
  permission: PermissionCreateNestedOneWithoutUserInput
}

input PermissionCreateNestedOneWithoutUserInput {
  create: PermissionCreateWithoutUserInput
  connectOrCreate: PermissionCreateOrConnectWithoutUserInput
  connect: PermissionWhereUniqueInput
}

input PermissionCreateWithoutUserInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  type: Role!
}

input PermissionCreateOrConnectWithoutUserInput {
  where: PermissionWhereUniqueInput!
  create: PermissionCreateWithoutUserInput!
}

input UserUpdateInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  lastName: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  validationToken: StringFieldUpdateOperationsInput
  lastLogin: NullableDateTimeFieldUpdateOperationsInput
  verificationStatus: EnumVerificationStatusFieldUpdateOperationsInput
  permission: PermissionUpdateOneWithoutUserInput
}

input PermissionUpdateOneWithoutUserInput {
  create: PermissionCreateWithoutUserInput
  connectOrCreate: PermissionCreateOrConnectWithoutUserInput
  upsert: PermissionUpsertWithoutUserInput
  disconnect: Boolean
  delete: Boolean
  connect: PermissionWhereUniqueInput
  update: PermissionUpdateWithoutUserInput
}

input PermissionUpsertWithoutUserInput {
  update: PermissionUpdateWithoutUserInput!
  create: PermissionCreateWithoutUserInput!
}

input PermissionUpdateWithoutUserInput {
  id: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  type: EnumRoleFieldUpdateOperationsInput
}

input AuthInput {
  email: String
  password: String
}